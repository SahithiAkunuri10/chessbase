import React, { useState } from "react";

const App = () => {
  const [form, setForm] = useState({
    rpName: "",
    opType: "",
    description: "",
    dependency: "",
    notes: "",
  });

  const handleChange = (e) => {
    const { name, value } = e.target;
    setForm({ ...form, [name]: value });
  };

  const validateRpName = (value) =>
    /^[a-zA-Z0-9-_]{0,50}$/.test(value) || value === "";

  const validateDescription = (value) => value.length <= 50;
  const validateNotes = (value) => value.length <= 255;

  const handleSubmit = () => {
    console.log("Form Data:", form);
  };

  return (
    <div
      style={{
        maxWidth: "500px",
        margin: "auto",
        padding: "20px",
        border: "1px solid #ccc",
        borderRadius: "8px",
        boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
        fontFamily: "'Arial', sans-serif",
        overflow: "hidden",
      }}
    >
      {/* RP Name and Description in the same row */}
      <div style={{ display: "flex", gap: "12px", marginBottom: "12px" }}>
        <div style={{ flex: 1 }}>
          <label>RP Name:</label>
          <input
            type="text"
            name="rpName"
            value={form.rpName}
            onChange={(e) =>
              validateRpName(e.target.value) && handleChange(e)
            }
            placeholder="RP Name (Max: 50)"
            style={{
              width: "100%",
              padding: "6px",
              marginTop: "6px",
              boxSizing: "border-box",
            }}
          />
          <small>Special Characters: Only "_" and "-" allowed.</small>
        </div>
        <div style={{ flex: 1 }}>
          <label>Description:</label>
          <input
            type="text"
            name="description"
            value={form.description}
            onChange={(e) =>
              validateDescription(e.target.value) && handleChange(e)
            }
            placeholder="Description (Max: 50)"
            style={{
              width: "100%",
              padding: "6px",
              marginTop: "6px",
              boxSizing: "border-box",
            }}
          />
        </div>
      </div>

      {/* OP Type */}
      <div style={{ marginBottom: "12px" }}>
        <label>OP Type:</label>
        <select
          name="opType"
          value={form.opType}
          onChange={handleChange}
          style={{
            width: "100%",
            padding: "6px",
            marginTop: "6px",
            boxSizing: "border-box",
          }}
        >
          <option value="">Select OP Type</option>
          <option value="Type1">Type 1</option>
          <option value="Type2">Type 2</option>
          <option value="Type3">Type 3</option>
        </select>
      </div>

      {/* Dependency */}
      <div style={{ marginBottom: "12px" }}>
        <label>Dependency:</label>
        <input
          type="text"
          name="dependency"
          value={form.dependency}
          onChange={handleChange}
          disabled
          placeholder="Disabled"
          style={{
            width: "100%",
            padding: "6px",
            marginTop: "6px",
            backgroundColor: "#f5f5f5",
            boxSizing: "border-box",
          }}
        />
      </div>

      {/* Notes */}
      <div style={{ marginBottom: "12px" }}>
        <label>Notes:</label>
        <textarea
          name="notes"
          value={form.notes}
          onChange={(e) =>
            validateNotes(e.target.value) && handleChange(e)
          }
          placeholder="Notes (Max: 255)"
          style={{
            width: "100%",
            padding: "6px",
            marginTop: "6px",
            boxSizing: "border-box",
          }}
          rows={3}
        />
      </div>

      {/* Buttons */}
      <div style={{ textAlign: "center" }}>
        <button
          onClick={handleSubmit}
          style={{
            padding: "8px 16px",
            backgroundColor: "#4CAF50",
            color: "white",
            border: "none",
            borderRadius: "4px",
            cursor: "pointer",
            marginRight: "8px",
          }}
        >
          OK
        </button>
        <button
          onClick={() => setForm({ rpName: "", opType: "", description: "", dependency: "", notes: "" })}
          style={{
            padding: "8px 16px",
            backgroundColor: "#f44336",
            color: "white",
            border: "none",
            borderRadius: "4px",
            cursor: "pointer",
          }}
        >
          Cancel
        </button>
      </div>
    </div>
  );
};

export default App;
